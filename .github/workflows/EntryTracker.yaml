name: EntryTracker CI

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  unit-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: 3.10.6

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Get Host UID and GID
        id: uid-gid
        run: |
          echo "HOST_UID=$(id -u)" >> $GITHUB_ENV
          echo "HOST_GID=$(id -g)" >> $GITHUB_ENV

      - name: Build and start Docker containers
        run: |
          docker build --build-arg UID=${{ env.HOST_UID }} --build-arg GID=${{ env.HOST_GID }} -t entry_tracker:latest .
          HOST_UID=${{ env.HOST_UID }} HOST_GID=${{ env.HOST_GID }} docker compose up -d
          sleep 20
          curl http://localhost:5000
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          REPO_NAME: ${{ secrets.REPO_NAME }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Authenticate Docker to AWS ECR
        run: |
          aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-south-1.amazonaws.com

      - name: Tag and Push Docker image to ECR
        run: |
          docker tag entry_tracker:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-south-1.amazonaws.com/${{ secrets.REPO_NAME }}:latest
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-south-1.amazonaws.com/${{ secrets.REPO_NAME }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: unit-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get Host UID and GID for Deploy
        id: deploy-uid-gid
        run: |
          echo "HOST_UID=$(id -u)" >> $GITHUB_ENV
          echo "HOST_GID=$(id -g)" >> $GITHUB_ENV

      - name: Deploy to EC2 instance
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.EC2_IP_ADDRESS }}  
          username: ubuntu 
          key: ${{ secrets.EC2_SSH_KEY }} 
          port: 22 
          script: |
            # SSH into EC2 and set environment variables for UID/GID
            export HOST_UID=$(id -u)
            export HOST_GID=$(id -g)
            
            # Pull the latest Docker image from ECR
            docker pull ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-south-1.amazonaws.com/${{ secrets.REPO_NAME }}:latest
            
            # Run the Docker container with the right UID and GID
            docker run -d -p 5000:5000 --user $HOST_UID:$HOST_GID ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-south-1.amazonaws.com/${{ secrets.REPO_NAME }}:latest
            sleep 20
            curl http://localhost:5000